let providerActivator;
let providerMeta = [];

describe('Model Chat Form (–ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã)', () => {
  it('1. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ –∏ –∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è', async () => {
    const providerInput = await $('#model-provider');
    providerActivator = await providerInput.parentElement();
    await providerActivator.waitForExist();
    await providerActivator.click();
  
    // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    await browser.waitUntil(async () => {
      const items = await $$('div[role="listbox"] .v-list-item');
      return items.length > 0;
    }, {
      timeout: 3000,
      timeoutMsg: '‚ùå –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
    });
  
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º browser.execute –¥–ª—è —á—Ç–µ–Ω–∏—è DOM –Ω–∞–ø—Ä—è–º—É—é
    const names = await browser.execute(() => {
      return Array.from(document.querySelectorAll('div[role="listbox"] .v-list-item')).map(el => {
        const title = el.querySelector('.v-list-item-title');
        return title?.innerText?.trim() || el.innerText?.trim() || '(–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è)';
      });
    });
  
    providerMeta = names.map((name, index) => ({
      index,
      name,
    }));
  
    await providerActivator.click(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    console.log('üîç –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤:', providerMeta.map(p => p.name).join(', '));
  });
  

  after(() => {
    providerMeta.forEach(({ index, name }) => {
      describe(`üîÅ –ü—Ä–æ–≤–∞–π–¥–µ—Ä "${name}"`, () => {
        it('2. –í—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞', async () => {
          await selectVuetifyItemByIndex(providerActivator, index);
          await browser.pause(1000);
        });

        it('3. –í—ã–±–∏—Ä–∞–µ—Ç –ø–µ—Ä–≤—É—é –º–æ–¥–µ–ª—å', async () => {
          const modelInput = await $('#model-name');
          const modelActivator = await modelInput.parentElement();
          await modelActivator.click();
          await selectVuetifyItemByIndex(modelActivator, 0);
        });

        it('4. –í–≤–æ–¥–∏—Ç prompt', async () => {
          const promptField = await $('#model-prompt');
          await promptField.click();
          await browser.keys(['Control', 'a']);
          await browser.keys('Backspace');
          await promptField.addValue('Write "Hello"');
        });

        it('5. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç', async () => {
          const generateBtn = await $('#generate');
          await generateBtn.click();

          const preview = await $('.md-preview');
          await preview.waitForDisplayed({ timeout: 15000 });

          const outputText = await preview.getText();
          console.log(`‚úÖ –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ "${name}": ${outputText}`);
          expect(outputText).toContain('Hello');
        });
      });
    });
  });
});



async function selectVuetifyItemByIndex(activatorElement, index) {
  await activatorElement.waitForClickable({ timeout: 3000 });

  // –ö–ª–∏–∫ –ø–æ —Å–µ–ª–µ–∫—Ç—É
  await activatorElement.click();
  await browser.pause(500);

  // –ñ–¥—ë–º, –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫
  await browser.waitUntil(async () => {
    const items = await $$('div[role="listbox"] .v-list-item');
    return items.length > index;
  }, {
    timeout: 3000,
    timeoutMsg: `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω–¥–µ–∫—Å–æ–º ${index} –≤ —Å–ø–∏—Å–∫–µ`,
  });

  const items = await $$('div[role="listbox"] .v-list-item');
  await items[index].scrollIntoView();
  await items[index].click();
}